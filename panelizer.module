<?php
/**
 * @file
 * Hook implementations for the Panelizer module.
 */

use \Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_theme().
 */
function panelizer_theme() {
  return [
    'panelizer_view_mode' => [
      'render element' => 'element',
    ],
  ];
}

/**
 * Implements hook_entity_type_alter().
 */
function panelizer_entity_type_alter(array &$entity_types) {
  /** @var \Drupal\panelizer\Plugin\PanelizerEntityManager $panelizer_manager */
  $panelizer_manager = \Drupal::service('plugin.manager.panelizer_entity');

  // Replace the entity view builder on any entity where we have a Panelizer
  // entity plugin and the entity itself has a view builder.
  foreach ($panelizer_manager->getDefinitions() as $entity_type_id => $panelizer_info) {
    if (isset($entity_types[$entity_type_id]) && $entity_types[$entity_type_id]->hasHandlerClass('view_builder')) {
      $entity_types[$entity_type_id]->setHandlerClass('fallback_view_builder', $entity_types[$entity_type_id]->getHandlerClass('view_builder'));
      $entity_types[$entity_type_id]->setHandlerClass('view_builder', '\Drupal\panelizer\PanelizerEntityViewBuilder');
    }
  }
}

/**
 * Implements hook_form_alter().
 */
function panelizer_form_entity_view_display_edit_form_alter(&$form, FormStateInterface $form_state) {
  /** @var \Drupal\Core\Entity\EntityFormInterface $form_object */
  $form_object = $form_state->getFormObject();
  /** @var \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display */
  $display = $form_object->getEntity();

  /** @var \Drupal\panelizer\Plugin\PanelizerEntityManager $panelizer_manager */
  $panelizer_manager = \Drupal::service('plugin.manager.panelizer_entity');

  if ($panelizer_manager->hasDefinition($display->getTargetEntityTypeId())) {

    $form['panelizer'] = [
      '#tree' => TRUE,
    ];
    $form['panelizer']['enable'] = [
      '#type' => 'checkbox',
      '#title' => t('Panelize this view mode'),
      '#default_value' => $display->getThirdPartySetting('panelizer', 'enable', FALSE),
    ];

    $form['#attached']['library'][] = 'panelizer/panelizer_default_form';

    $form['actions']['submit']['#submit'][] = 'panelizer_form_entity_view_display_edit_form_submit';
  }
}

/**
 * Form submission callback for entity_view_display_edit_form.
 */
function panelizer_form_entity_view_display_edit_form_submit($form, FormStateInterface $form_state) {
  /** @var \Drupal\Core\Entity\EntityFormInterface $form_object */
  $form_object = $form_state->getFormObject();
  /** @var \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display */
  $display = $form_object->getEntity();

  $panelizer_enabled = $form_state->getValue(['panelizer', 'enable']);

  // Enable it.
  $display->setThirdPartySetting('panelizer', 'enable', $panelizer_enabled);

  if ($panelizer_enabled) {
    // Set the default display.
    $displays = $display->getThirdPartySetting('panelizer', 'displays', []);
    if (empty($displays['default'])) {
      /** @var \Drupal\panelizer\Plugin\PanelizerEntityManager $panelizer_manager */
      $panelizer_manager = \Drupal::service('plugin.manager.panelizer_entity');
      /** @var \Drupal\panels\PanelsDisplayManagerInterface $panels_manager */
      $panels_manager = \Drupal::service('panels.display_manager');
      /** @var \Drupal\panelizer\Plugin\PanelizerEntityInterface $panelizer_entity_plugin */
      $panelizer_entity_plugin = $panelizer_manager->createInstance($display->getTargetEntityTypeId(), []);
      $displays['default'] = $panels_manager->exportDisplay($panelizer_entity_plugin->getDefaultDisplay($display, $display->getTargetBundle(), $display->getMode()));
      $display->setThirdPartySetting('panelizer', 'displays', $displays);
    }
  }

  $display->save();
}

/**
 * Prepares variables for Panelizer view mode templates.
 *
 * Default template: panelizer-view-mode.html.twig
 */
function template_preprocess_panelizer_view_mode(&$variables) {
  $element = $variables['element'];

  // Copy values into the variables.
  /** @var \Drupal\panelizer\Plugin\PanelizerEntityInterface $panelizer_plugin */
  $panelizer_plugin = $variables['panelizer_plugin'] = $element['#panelizer_plugin'];
  /** @var \Drupal\panels\Plugin\DisplayVariant\PanelsDisplayVariant $panels_display */
  $panels_display = $variables['panels_display'] = $element['#panels_display'];
  /** @var \Drupal\Core\Entity\EntityInterface $entity */
  $entity = $variables['entity'] = $element['#entity'];
  $view_mode = $variables['view_mode'] = $element['#view_mode'];
  $variables['content'] = $element['content'];
  $variables['title'] = isset($element['#title']) ? $element['#title'] : '';

  // Setup the defaults.
  $variables['title_element'] = 'h2';
  $variables['entity_url'] = $entity->toUrl('canonical', [
    'language' => $entity->language(),
  ]);

  // Allow the Panelizer entity plugin to do additional preprocessing.
  $panelizer_plugin->preprocessViewMode($variables, $entity, $panels_display, $view_mode);
}

